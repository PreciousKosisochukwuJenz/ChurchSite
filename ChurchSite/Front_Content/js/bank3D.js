!function (e, t) { "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = e || self).Bank3D = t() }(this, function () { "use strict"; function get(e, t, n) { const s = e.split(".").reduce((e, t) => e && e[t], t || this); return void 0 === s ? n : s } function isFunction(e) { return "function" == typeof e } function isObject(e) { return "object" == typeof e } function isString(e) { return "string" == typeof e } function isNumber(e) { return "number" == typeof e && !isNaN(e) } function isInteger(e) { return isNumber(e) && e % 1 == 0 } function isEmail(e) { return /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e) } function randId(e = 5) { for (var t = "", n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", s = 0; s < e; s++)t += n.charAt(Math.floor(Math.random() * n.length)); return t } function applyStyles(e, t) { Object.keys(t).forEach(n => { e.style[n] = t[n] }) } function switchCheck(value, rule, fullname) { var errors = []; switch (!0) { case /^required/.test(rule): null == value && errors.push("'" + fullname + "' is required"); break; case /^integer/.test(rule): isInteger(value) || errors.push("'" + fullname + "' must be an integer"); break; case /^number/.test(rule): isNumber(value) || errors.push("'" + fullname + "' must be a number"); break; case /^function/.test(rule): isFunction(value) || errors.push("'" + fullname + "' must be a function"); break; case /^string/.test(rule): isString(value) || errors.push("'" + fullname + "' must be a String"); break; case /^object/.test(rule): isObject(value) || errors.push("'" + fullname + "' must be an Object"); break; case /^gt:[0-9-]+/.test(rule): var r = rule.split(":"); (!isNumber(value) || value <= Number(r[1])) && errors.push("'" + fullname + "' must be greater than " + r[1]); break; case /^email/.test(rule): isEmail(value) || errors.push("'" + fullname + "' must be a valid Email address"); break; case /^instanceof:.+/.test(rule): var r = rule.split(":")[1]; try { var pass = value instanceof eval(r); !0 !== pass && errors.push("'" + fullname + "' must be an instance of " + r) } catch (e) { errors.push(e) } break; case /^in:.+/.test(rule): var acceptable = (rule.split(":")[1] || "").split(",").map(function (e) { return e.trim() }); if (acceptable.indexOf(value) < 0) { var joined = acceptable.join(", "); errors.push("'" + fullname + "' must be one of the following: " + joined) } break; case /^anyOf\(.+\)/.test(rule): var rules = rule.match(/anyOf\((.+?)\)/)[1].split(";").map(function (e) { return e.trim() }), validations = rules.map(function (e) { return switchCheck(value, e, fullname) }).filter(function (e) { return !!e.length }); validations.length === rules.length && errors.push(validations.join(" or ")) }return errors } function validate(e, t, n) { var s = s || []; return Object.keys(t).forEach(function (o) { var i = n ? (n || "") + "." + o : o; if (isObject(t[o])) return s = s.concat(validate(e[o] || {}, t[o], i)); var r = t[o].split("|"), a = e[o]; (null != a || r.includes("required")) && r.forEach(function (e) { s = s.concat(switchCheck(a, e, i)) }) }), s } const rules = { amount: "required|integer|gt:0", reference: "required|string", email: "required|email", currencyCode: "string", container: "anyOf(string;instanceof:HTMLElement)", callback: "function", onClose: "function", onReady: "function", merchantKey: "required|string", meta: "object", color: "string", mode: "in:live,test,demo", sessionTimeout: "number", demoOptions: { merchantName: "string", logoUrl: "string" } }, urls = { live: "https://paywithbank3d.com/", test: "https://staging.paywithbank3d.com/", demo: "https://staging.paywithbank3d.com/" }; function Payment(e) { this.createIframe = this.createIframe.bind(this), this.windowMessageEventHandler = this.windowMessageEventHandler.bind(this); const t = { amount: 0, reference: "string", currencyCode: "NGN", mode: "live", sessionTimeout: void 0, callback: function () { }, onClose: function () { }, onReady: function () { } }, n = validate(e = Object.assign({}, t, e), rules); if (n.length) throw new Error("Payment Initialization Error. \n" + n.join("\n")); if (e.container) { const t = document.querySelector("#" + e.container); if (!t) throw new Error("The container '" + e.container + "' does not exist on this page"); this.container = t } this.options = e, this.isReady = !1, this.complete = !1, this.loaded = !1, this.id = "np-" + randId(), this.iframe = this.createIframe(), this.container && (this.formatContainer(), this.show()), this.listenForMessages() } Payment.prototype = { open() { if (this.loaded) this.show(); else { const e = this, t = function () { e.show(), e.iframe.removeEventListener("load", t) }; this.iframe.addEventListener("load", t) } }, destroy() { this.iframe.remove(), this.listenForMessages(!1) }, close(e) { const t = this; e = e || {}, this.hide().then(function () { e.destroy && t.destroy() }) }, hide(e) { const t = this; return "none" === this.iframe.style.display || "0" === this.iframe.style.opacity ? (e && e.call(e), Promise.resolve()) : new Promise(function (n) { applyStyles(t.iframe, { opacity: 0 }), t.iframe.addEventListener("transitionend", function s() { t.iframe.removeEventListener("transitionend", s), applyStyles(t.iframe, { display: "none" }), e && e.call(e), n() }) }) }, show() { applyStyles(this.iframe, { display: "block", opacity: 1 }) }, initFrame() { const e = { amount: this.options.amount, reference: this.options.reference, currencyCode: this.options.currencyCode, merchantKey: this.options.merchantKey, color: this.options.color, email: this.options.email, phone: this.options.phone, mode: this.options.mode, sessionTimeout: this.options.sessionTimeout, display: this.container ? "transparent" : void 0 }; "demo" === this.options.mode && (e.demoOptions = this.options.demoOptions || {}), this.sendMessage("frameInit", { id: this.id }), this.sendMessage("start", e) }, listenForMessages(e = !0) { window[e ? "addEventListener" : "removeEventListener"]("message", this.windowMessageEventHandler) }, windowMessageEventHandler(e) { const t = e.data; if (isObject(t) && t.data && t.data.id === this.id) { const e = get("data.data", t, {}); switch (t.type) { case "np-app:ready": this.isReady = !0; break; case "np-app:success": this.complete = !0, this.close({ destroy: !0 }), this.options.callback.call(this.options.callback, e); break; case "np-app:closed": this.close({ destroy: !0 }), this.options.onClose.call(this.options.onClose) } } }, formatContainer() { this.container.className = "", applyStyles(this.container, { width: "100%", height: "500px" }) }, createIframe() { var e = this, t = document.createElement("iframe"); t.id = this.id, applyStyles(t, { position: this.container ? "static" : "fixed", display: "none", top: 0, left: 0, right: 0, bottom: 0, width: "100%", height: "100%", zIndex: "999999999", opacity: 0, transition: "opacity 0.3s ease-in-out" }), t.setAttribute("frameBorder", "0"), t.setAttribute("allowtransparency", "true"); var n = urls[this.options.mode] + "?mode=" + (this.container ? "inline-embed" : "inline") + "&rt=" + encodeURIComponent(btoa(this.id)); return t.src = n, t.onload = function () { t.onload = null, e.loaded = !0, setTimeout(() => { e.isReady ? (e.options.onReady.call(e.options.onReady), e.initFrame()) : (e.close({ destroy: !0 }), e.options.onClose.call(e.options.onClose)) }, 500) }, (this.container || document.body).appendChild(t), t }, sendMessage(e, t) { var n = { start: "pz:transaction:start", frameInit: "pz:frame:init", color: "pz:set:color" }; n[e] && this.iframe.contentWindow.postMessage({ type: n[e], data: t }, "*") }, setColor(e) { this.sendMessage("color", { color: e }) } }; var Bank3D = function () { const e = []; return { createPayment(t) { if (e.length >= 1) { const t = e[0]; t && (t.close({ destroy: !0 }), t.options.onClose.call(t.options.onClose)) } const n = t.onClose; t.onClose = ((...s) => { const o = e.findIndex(e => e.options.reference === t.reference); o > -1 && e.splice(o, 1), n && n.call(n, ...s) }); const s = new Payment(t = Object.assign({}, t)); return e.push(s), s }, closeAll(t) { t = void 0 === t || !!t, e.forEach(function (e) { e.close({ destroy: t }), e.options.onClose.call(e.options.onClose) }) } } }(), global, factory; return global = void 0, factory = function () { return Bank3D }, "object" == typeof exports && "undefined" != typeof module ? module.exports = factory() : "function" == typeof define && define.amd ? define(factory) : (global = global || self).Netpay = factory(), Bank3D });